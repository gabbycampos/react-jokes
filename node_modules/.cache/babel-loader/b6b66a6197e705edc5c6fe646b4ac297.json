{"ast":null,"code":"var _jsxFileName = \"/Users/gabriela/2021/Coding/SB/Exercises/react-jokes-classes/src/JokeList.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateNewJokes = () => this.setState({\n      jokes: []\n    });\n\n    this.vote = (id, delta) => {\n      this.setState({\n        jokes: this.state.jokes.map(j => j.id === id ? { ...j,\n          votes: j.votes + delta\n        } : j)\n      });\n    };\n\n    this.reset = id => {\n      this.setState({\n        jokes: this.state.jokes.map(j => j.id === id ? { ...j,\n          votes: 0\n        } : j)\n      });\n    };\n\n    this.state = {\n      jokes: []\n    };\n    this.getJokes = this.getJoke.bind(this);\n  }\n\n  async getJoke() {\n    let j = [...this.state.jokes];\n    let seenJokes = new Set();\n\n    try {\n      while (j.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes: j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async componentDidMount() {\n    if (this.state.jokes.length === 0) {\n      await this.getJokes();\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.state.jokes.length === 0) {\n      await this.getJokes();\n    }\n  }\n\n  render() {\n    if (this.state.jokes.length) {\n      let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"JokeList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }\n      }, \"Get New Jokes\"), sortedJokes.map(j => /*#__PURE__*/React.createElement(Joke, {\n        text: j.joke,\n        key: j.id,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote,\n        reset: this.reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      })));\n    }\n\n    return null;\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/Users/gabriela/2021/Coding/SB/Exercises/react-jokes-classes/src/JokeList.js"],"names":["React","axios","Joke","JokeList","Component","constructor","props","generateNewJokes","setState","jokes","vote","id","delta","state","map","j","votes","reset","getJokes","getJoke","bind","seenJokes","Set","length","numJokesToGet","res","get","headers","Accept","status","jokeObj","data","has","add","push","console","error","e","log","componentDidMount","componentDidUpdate","render","sortedJokes","sort","a","b","joke","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AAGA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAwCnBC,gBAxCmB,GAwCA,MAAM,KAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAd,CAxCN;;AAAA,SA0CnBC,IA1CmB,GA0CZ,CAACC,EAAD,EAAKC,KAAL,KAAe;AACrB,WAAKJ,QAAL,CAAc;AACbC,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAAX,CAAiBK,GAAjB,CAAsBC,CAAD,IAC3BA,CAAC,CAACJ,EAAF,KAASA,EAAT,GAAc,EAAE,GAAGI,CAAL;AAAQC,UAAAA,KAAK,EAAED,CAAC,CAACC,KAAF,GAAUJ;AAAzB,SAAd,GAAiDG,CAD3C;AADM,OAAd;AAKA,KAhDkB;;AAAA,SAkDnBE,KAlDmB,GAkDVN,EAAD,IAAQ;AACf,WAAKH,QAAL,CAAc;AACbC,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAAX,CAAiBK,GAAjB,CAAsBC,CAAD,IAC3BA,CAAC,CAACJ,EAAF,KAASA,EAAT,GAAc,EAAE,GAAGI,CAAL;AAAQC,UAAAA,KAAK,EAAE;AAAf,SAAd,GAAmCD,CAD7B;AADM,OAAd;AAKA,KAxDkB;;AAElB,SAAKF,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKS,QAAL,GAAgB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAhB;AACA;;AAEY,QAAPD,OAAO,GAAG;AACf,QAAIJ,CAAC,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWJ,KAAf,CAAR;AACA,QAAIY,SAAS,GAAG,IAAIC,GAAJ,EAAhB;;AACA,QAAI;AACH,aAAOP,CAAC,CAACQ,MAAF,GAAW,KAAKjB,KAAL,CAAWkB,aAA7B,EAA4C;AAC3C,YAAIC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,4BAAV,EAAwC;AACvDC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAD8C,SAAxC,CAAhB;AAGA,YAAI;AAAEC,UAAAA,MAAF;AAAU,aAAGC;AAAb,YAAyBL,GAAG,CAACM,IAAjC;;AAEA,YAAI,CAACV,SAAS,CAACW,GAAV,CAAcF,OAAO,CAACnB,EAAtB,CAAL,EAAgC;AAC/BU,UAAAA,SAAS,CAACY,GAAV,CAAcH,OAAO,CAACnB,EAAtB;AACAI,UAAAA,CAAC,CAACmB,IAAF,CAAO,EAAE,GAAGJ,OAAL;AAAcd,YAAAA,KAAK,EAAE;AAArB,WAAP;AACA,SAHD,MAGO;AACNmB,UAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd;AACA;AACD;;AACD,WAAK5B,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACA,KAfD,CAeE,OAAOsB,CAAP,EAAU;AACXF,MAAAA,OAAO,CAACG,GAAR,CAAYD,CAAZ;AACA;AACD;;AAEsB,QAAjBE,iBAAiB,GAAG;AACzB,QAAI,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBc,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,YAAM,KAAKL,QAAL,EAAN;AACJ;AACD;;AAEwB,QAAlBsB,kBAAkB,GAAG;AAC1B,QAAI,KAAK3B,KAAL,CAAWJ,KAAX,CAAiBc,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,YAAM,KAAKL,QAAL,EAAN;AAAuB;AAC3B;;AAoBDuB,EAAAA,MAAM,GAAG;AACR,QAAI,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBc,MAArB,EAA6B;AAC5B,UAAImB,WAAW,GAAG,CAAC,GAAG,KAAK7B,KAAL,CAAWJ,KAAf,EAAsBkC,IAAtB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC7B,KAAF,GAAU4B,CAAC,CAAC5B,KAAjD,CAAlB;AACA,0BACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,KAAKT,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAKEmC,WAAW,CAAC5B,GAAZ,CAAiBC,CAAD,iBAChB,oBAAC,IAAD;AACC,QAAA,IAAI,EAAEA,CAAC,CAAC+B,IADT;AAEC,QAAA,GAAG,EAAE/B,CAAC,CAACJ,EAFR;AAGC,QAAA,EAAE,EAAEI,CAAC,CAACJ,EAHP;AAIC,QAAA,KAAK,EAAEI,CAAC,CAACC,KAJV;AAKC,QAAA,IAAI,EAAE,KAAKN,IALZ;AAMC,QAAA,KAAK,EAAE,KAAKO,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALF,CADD;AAkBA;;AACD,WAAO,IAAP;AACA;;AAnFqC;;AAAjCd,Q,CACE4C,Y,GAAe;AAAEvB,EAAAA,aAAa,EAAE;AAAjB,C;AAqFvB,eAAerB,QAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n\nclass JokeList extends React.Component {\n\tstatic defaultProps = { numJokesToGet: 10 };\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { jokes: [] };\n\t\tthis.getJokes = this.getJoke.bind(this);\n\t}\n\n\tasync getJoke() {\n\t\tlet j = [...this.state.jokes];\n\t\tlet seenJokes = new Set();\n\t\ttry {\n\t\t\twhile (j.length < this.props.numJokesToGet) {\n\t\t\t\tlet res = await axios.get(\"https://icanhazdadjoke.com\", {\n\t\t\t\t\theaders: { Accept: \"application/json\" },\n\t\t\t\t});\n\t\t\t\tlet { status, ...jokeObj } = res.data;\n\n\t\t\t\tif (!seenJokes.has(jokeObj.id)) {\n\t\t\t\t\tseenJokes.add(jokeObj.id);\n\t\t\t\t\tj.push({ ...jokeObj, votes: 0 });\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"duplicate found!\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({ jokes: j });\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tif (this.state.jokes.length === 0) {\n      await this.getJokes();\n\t}\n}\n\n\tasync componentDidUpdate() {\n\t\tif (this.state.jokes.length === 0) {\n      await this.getJokes();}\n\t}\n\n\tgenerateNewJokes = () => this.setState({ jokes: [] });\n\n\tvote = (id, delta) => {\n\t\tthis.setState({\n\t\t\tjokes: this.state.jokes.map((j) =>\n\t\t\t\tj.id === id ? { ...j, votes: j.votes + delta } : j\n\t\t\t),\n\t\t});\n\t};\n\n\treset = (id) => {\n\t\tthis.setState({\n\t\t\tjokes: this.state.jokes.map((j) =>\n\t\t\t\tj.id === id ? { ...j, votes: 0 } : j\n\t\t\t),\n\t\t});\n\t};\n\n\trender() {\n\t\tif (this.state.jokes.length) {\n\t\t\tlet sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n\t\t\treturn (\n\t\t\t\t<div className=\"JokeList\">\n\t\t\t\t\t<button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n\t\t\t\t\t\tGet New Jokes\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{sortedJokes.map((j) => (\n\t\t\t\t\t\t<Joke\n\t\t\t\t\t\t\ttext={j.joke}\n\t\t\t\t\t\t\tkey={j.id}\n\t\t\t\t\t\t\tid={j.id}\n\t\t\t\t\t\t\tvotes={j.votes}\n\t\t\t\t\t\t\tvote={this.vote}\n\t\t\t\t\t\t\treset={this.reset}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}