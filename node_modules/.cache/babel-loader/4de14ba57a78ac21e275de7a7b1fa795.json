{"ast":null,"code":"var _jsxFileName = \"/Users/gabriela/2021/Coding/SB/Exercises/react-jokes-classes/src/JokeList.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.getJokes = this.getJokes.bind(this);\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let seenJokes = new Set();\n\n    try {\n      while (j.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          header: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes: j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async componentDidMount() {\n    if (this.state.jokes.length === 0) {\n      await this.getJokes();\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.state.jokes.length === 0) {\n      await this.getJokes();\n    }\n  }\n  /* empty joke list and then call getJokes */\n\n\n  generateNewJokes() {\n    this.setState.setJokes([]);\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    this.setState.setJokes(allJokes => allJokes.map(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n  render() {\n    if (this.state.jokes.length) {\n      let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"JokeList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, \"Get New Jokes\"), sortedJokes.map(j => /*#__PURE__*/React.createElement(Joke, {\n        text: j.joke,\n        key: j.id,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      })));\n    }\n\n    return null;\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/Users/gabriela/2021/Coding/SB/Exercises/react-jokes-classes/src/JokeList.js"],"names":["React","axios","Joke","JokeList","Component","constructor","props","state","jokes","getJokes","bind","j","seenJokes","Set","length","numJokesToGet","res","get","header","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","setState","e","log","componentDidMount","componentDidUpdate","generateNewJokes","setJokes","vote","delta","allJokes","map","render","sortedJokes","sort","a","b","joke","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.getJokes = this.getJokes.bind(this);\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let seenJokes = new Set();\n    try {\n      while (j.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          header: { Accept: \"application/json\" }\n        });\n        let { status, ...jokeObj } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj, votes: 0 });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n      this.setState({jokes: j});\n    } catch(e) {\n      console.log(e);\n    }\n  }\n\n  async componentDidMount() {\n    if (this.state.jokes.length === 0) {\n      await this.getJokes();\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.state.jokes.length === 0) {\n      await this.getJokes();\n    }\n  }\n  /* empty joke list and then call getJokes */\n\n  generateNewJokes() {\n    this.setState.setJokes([]);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    this.setState.setJokes(allJokes =>\n      allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  };\n\n  /* render: either loading spinner or list of sorted jokes. */\nrender() {\n  if (this.state.jokes.length) {\n    let sortedJokes = [...this.state.jokes].sort((a,b) => b.votes - a.votes);\n    \n    return (\n      <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n        Get New Jokes\n      </button>\n  \n      {sortedJokes.map(j => (\n        <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={this.vote} />\n      ))}\n    </div>\n    )\n  }\n  \n  return null;\n  \n  }\n}\n\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}